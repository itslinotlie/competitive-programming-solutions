{
	// Place your contest-codes workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"": {
		"prefix": "google",
		"body": [
		  "// 11/13/2020",
		  "#include<bits/stdc++.h>",
		  "using namespace std;",
		  "typedef long long ll;",
		  "typedef pair<int, int> pii;",
		  "#define CLR(a) memset(a, 0, sizeof(a))",
		  "#define REP(i, n) for(int i=0;i<n;i++)",
		  "#define FOR(i, n) for(int i=1;i<=n;i++)",
		  "#define F first",
		  "#define S second",
		  "inline ll gcd(ll a, ll b) {return b==0? a:gcd(b, a%b);}",
		  "inline ll lcm(ll a, ll b) {return a*b/gcd(a, b);}",
		  "",
		  "",
		  "void work() {",
		  "    $0",
		  "}",
		  "int main() {",
		  "    ios::sync_with_stdio(0); cin.tie(0);",
		  "    int T; cin >> T;",
		  "    for(int t=1;t<=T;t++) {",
		  "        cout << \"Case #\" << t << \": \";",
		  "        work();",
		  "    }",
		  "}"
		],
		"description": ""
	  }
}